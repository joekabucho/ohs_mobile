{"version":3,"sources":["webpack:///./src/app/pages/image-upload/image-upload.module.ts","webpack:///./src/app/pages/image-upload/image-upload.page.html","webpack:///./src/app/pages/image-upload/image-upload.page.scss","webpack:///./src/app/pages/image-upload/image-upload.page.ts","webpack:///./src/app/services/upload.service.ts"],"names":[],"mappings":"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","file":"pages-image-upload-image-upload-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ImageUploadPage } from './image-upload.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ImageUploadPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ImageUploadPage]\n})\nexport class ImageUploadPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Create Verification Image</ion-title>\\n    <ion-button slot=\\\"start\\\">\\n      <ion-menu-button>\\n\\n      </ion-menu-button>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"ion-padding\\\"></div>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\" class=\\\"animated fadeInDown\\\" style=\\\"position: fixed;\\\">\\n    <ion-fab-button (click)=\\\"takePicture()\\\">\\n      <ion-ripple-effect></ion-ripple-effect>\\n      <ion-icon name=\\\"camera\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ltYWdlLXVwbG9hZC9pbWFnZS11cGxvYWQucGFnZS5zY3NzIn0= */\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {File, IWriteOptions, FileEntry} from '@ionic-native/file/ngx';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport {UploadService} from '../../services/upload.service';\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.page.html',\n  styleUrls: ['./image-upload.page.scss'],\n})\nexport class ImageUploadPage implements OnInit, AfterViewInit {\n  options: CameraOptions = {\n    quality: 100,\n    destinationType: this.camera.DestinationType.FILE_URI,\n    encodingType: this.camera.EncodingType.JPEG,\n    mediaType: this.camera.MediaType.PICTURE\n  };\n  constructor(private file: File, private uploadService: UploadService, private camera: Camera) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit(): void {\n  }\n\n  readFile(file: any) {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const imgBlob = new Blob([reader.result], {\n        type: file.type\n      });\n      const formData = new FormData();\n      formData.append('name', 'Hello');\n      formData.append('file', imgBlob, file.name);\n      this.uploadService.uploadFile(formData).subscribe(dataRes => {\n        console.log(dataRes);\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  takePicture() {\n    this.camera.getPicture(this.options).then((imageData) => {\n      this.file.resolveLocalFilesystemUrl(imageData).then((entry: FileEntry) => {\n        entry.file(file => {\n          console.log(file);\n          this.readFile(file);\n        });\n      });\n    }, (err) => {\n      alert(\"unable to take image try again later\");\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private http: HttpClient) {}\n\n  uploadFile(formData) {\n    return this.http.post('https://example.com/upload.php', formData);\n  }\n}\n"],"sourceRoot":""}
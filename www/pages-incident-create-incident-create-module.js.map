{"version":3,"sources":["webpack:///./src/app/models/incident.ts","webpack:///./src/app/pages/incident-create/incident-create.module.ts","webpack:///./src/app/pages/incident-create/incident-create.page.html","webpack:///./src/app/pages/incident-create/incident-create.page.scss","webpack:///./src/app/pages/incident-create/incident-create.page.ts","webpack:///./src/app/services/incidents.service.ts"],"names":[],"mappings":"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","file":"pages-incident-create-incident-create-module.js","sourcesContent":["export class Incident {\n    id: string;\n    createdAt: Date;\n    // tslint:disable-next-line:variable-name\n    serious_injury: boolean ;\n    // tslint:disable-next-line:variable-name\n    serious_incident: boolean;\n    // tslint:disable-next-line:variable-name\n    first_aid: boolean;\n    // tslint:disable-next-line:variable-name\n    medical_aid: boolean ;\n    // tslint:disable-next-line:variable-name\n    potential_serious: boolean ;\n    // tslint:disable-next-line:variable-name\n    property_damage: boolean ;\n    // tslint:disable-next-line:variable-name\n    production_loss: boolean ;\n    // tslint:disable-next-line:variable-name\n    date_time_reported: string;\n    // tslint:disable-next-line:variable-name\n    worker_job_title: string ;\n    // tslint:disable-next-line:variable-name\n    date_of_incident: string ;\n    // tslint:disable-next-line:variable-name\n    first_aider: boolean ;\n    // tslint:disable-next-line:variable-name\n    supervisor: boolean ;\n    // tslint:disable-next-line:variable-name\n    another_worker: boolean ;\n    // tslint:disable-next-line:variable-name\n    ohs_committee_member: boolean ;\n    // tslint:disable-next-line:variable-name\n    ohs_representative: boolean ;\n    // tslint:disable-next-line:variable-name\n    employer: boolean ;\n    // tslint:disable-next-line:variable-name\n    prime_contractor: boolean ;\n    // tslint:disable-next-line:variable-name\n    other_person: boolean ;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentCreatePage } from './incident-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentCreatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [IncidentCreatePage]\n})\nexport class IncidentCreatePageModule {}\n","module.exports = \"<!-- student-create.html -->\\n<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Create Incident</ion-title>\\n    <ion-button slot=\\\"start\\\">\\n      <ion-menu-button>\\n\\n      </ion-menu-button>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n \\n  <ion-item>\\n    <ion-label>Serious injury</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.serious_injury\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Serious incident</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.serious_incident\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>first aid</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.first_aid\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>medical aid</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.medical_aid\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>potentially serious incident</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.potential_serious\\\"></ion-checkbox>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label>production loss</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.production_loss\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>date reported</ion-label>\\n    <ion-datetime [(ngModel)]=\\\"data.date_time_reported\\\" placeholder=\\\"Enter date reported\\\"></ion-datetime>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>worker job title</ion-label>\\n    <ion-input [(ngModel)]=\\\"data.worker_job_title\\\" placeholder=\\\"Enter worker job title\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Date of incident</ion-label>\\n    <ion-datetime [(ngModel)]=\\\"data.date_of_incident\\\" placeholder=\\\"Enter Date of incident\\\"></ion-datetime>\\n  </ion-item>\\n  <h3>Incident reported to</h3>\\n  <ion-item>\\n    <ion-label>first aider</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.first_aider\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Supervisor</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.supervisor\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Another Worker</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.another_worker\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>OHS committee member</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.ohs_committee_member\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>OHS representative</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.ohs_representative\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Employer</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.employer\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Prime contractor</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.prime_contractor\\\"></ion-checkbox>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Any other person</ion-label>\\n    <ion-checkbox [(ngModel)]=\\\"data.other_person\\\"></ion-checkbox>\\n  </ion-item>\\n \\n\\n\\n\\n  <ion-item>\\n    <ion-button (click)=\\\"submitForm()\\\">Add\\n    </ion-button>\\n  </ion-item>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luY2lkZW50LWNyZWF0ZS9pbmNpZGVudC1jcmVhdGUucGFnZS5zY3NzIn0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Incident } from '../../models/incident';\nimport { IncidentService } from '../../services/incidents.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-incident-create',\n  templateUrl: './incident-create.page.html',\n  styleUrls: ['./incident-create.page.scss'],\n})\nexport class IncidentCreatePage implements OnInit {\n  data: Incident;\n \n  constructor(\n    public apiService: IncidentService,\n    public router: Router\n  ) {\n    this.data = new Incident();\n  }\n \n  ngOnInit() {\n  }\n \n  submitForm() {\n    this.apiService.createItem(this.data).subscribe((response) => {\n      this.router.navigate(['home-results']);\n    });\n \n  }\n \n}\n\n","\n// api.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Incident } from '../models/incident';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncidentService {\n \n  // API path\n  base_path = '/api/incident';\n \n  constructor(private http: HttpClient) { }\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n\n  // Create a new item\n  createItem(item): Observable<Incident> {\n    return this.http\n      .post<Incident>(this.base_path, JSON.stringify(item), this.httpOptions)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n\n  // Get single student data by ID\n  getItem(_id): Observable<Incident> {\n    return this.http\n      .get<Incident>(this.base_path + '/' + _id)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n \n  // Get students data\n  getList(): Observable<Incident> {\n    return this.http\n      .get<Incident>(this.base_path)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n \n  // Update item by id\n  updateItem(_id, item): Observable<Incident> {\n    return this.http\n      .put<Incident>(this.base_path + '/' + _id, JSON.stringify(item), this.httpOptions)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n \n  // Delete item by id\n  deleteItem(_id) {\n    return this.http\n      .delete<Incident>(this.base_path + '/' + _id, this.httpOptions)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n \n}\n\n"],"sourceRoot":""}